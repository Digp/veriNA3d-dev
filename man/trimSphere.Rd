% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trimSphere.R
\name{trimSphere}
\alias{trimSphere}
\title{Trim a pdb/cif object to obtain a nucleotide/s of interest and the
surrounding area.}
\usage{
trimSphere(cif, model = NULL, ntindex, chain, sel = NULL, cutoff = 8,
  cutres = FALSE, file = NULL, verbose = TRUE)
}
\arguments{
\item{cif}{A cif/pdb object obtained from cifParser/read.pdb respectively
or a pdb ID so that the function can download the data.}

\item{model}{The model of interest to use in the calculations. The first
model is always the default.}

\item{ntindex}{A numeric index/indices for the position of the desired
nucleotides in the given chain. Not necessary if you provide sel (see
below).}

\item{chain}{A string with the chain of interest. Not necessary if you
provide sel (see below)..}

\item{sel}{A "select" object as obtained from atom.select (bio3d). Note
that if you are using this option, cif must be the same input object you
used for the atom.select function.}

\item{cutoff}{A numeric indicating the radius in angstroms to select around
the desired nucleotides. If 0 only the nucleotides are returned.}

\item{cutres}{A logical. TRUE to return only what it is found in the cutoff
(residues in the boundaries of the cutoff are usually truncated) or
FALSE to return whole residues even if further than the cutoff.}

\item{file}{A string to save the output in a pdb formated file. If NULL the
fucntions just returns the pdb object.}

\item{verbose}{A logical to print details of the process.}
}
\value{
A smaller pdb object or a pdb file.
}
\description{
From a pdb/CIF object, the nucleotide of interest and a radius, the
function finds all the atoms in the given area and returns a pdb object
that only includes the nearest atoms.
}
\examples{
   ## Toy example
   cif <- cifParser("1s72")

   ## Generate a smaller pdb with the atoms 55 to 58 of the RNA chain "9"
   ## with a sorrounding sphere of 5 Angstroms:
   smallerpdb <- trimSphere(cif, ntindex=seq(55, 58, 1), chain="9", 
     cutoff=5, verbose=FALSE)

   ## Same process saving the output in a file:
   smallerpdb <- trimSphere(cif, ntindex=seq(55, 58, 1), chain="9", 
     cutoff=5, verbose=FALSE, file="output.pdb")


}
\author{
Diego Gallego
}
